install.packages("raster")
?umap
??umap
library(umap)
y
library(umap)
n
?umap
R
verison
install.packages("/Volumes/LACIE_SHARE/project/2020-02-19-pipelineForBuenrostro2018/bin/zhecui-SnapATAC-master.zip", repos = NULL, type = "win.binary")
install.packages(c("bit", "blob", "callr", "caTools", "checkmate", "devtools", "digest", "dplyr", "DT", "farver", "foreach", "foreign", "ggpubr", "gh", "gmp", "hexbin", "Hmisc", "jsonlite", "knitr", "lattice", "mime", "mixtools", "nlme", "plotly", "prettyunits", "processx", "ps", "R.methodsS3", "RcppArmadillo", "RCurl", "remotes", "repr", "rlang", "rmarkdown", "rstudioapi", "rsvd", "shinyjs", "stringi", "text2vec", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun", "XML", "yaml"))
library(Matrix)
install.packages(Matrix)
q()
q(0
()
q()
devtools::install_github("caleblareau/BuenColors")
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
install.packages("dplyr")
install.packages("cowplot")
q()
BiocManager::install("SummarizedExperiment")
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment")
q()
install.package("GenomicRanges")
install.packages("GenomicRanges")
q()
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
q()
library("SummarizedExperiment")
BiocManager::install("SummarizedExperiment")
q()
library("summarizedexperiment")
library("SummarizedExperiment")
q()
q()
library("GenomicRanges")
BiocManager::install("GenomicRanges")
library("GenomincRanges")
Q()
q()
library("GenomicRanges")
q()
library("GenomicRanges")
q()
library("GenomicRanges")
library("SummarizedExperiment")
library("GenomicRanges")
q()
library(SummarizedExperiment)
library("SummarizedExperiment")
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment")
BiocManager::install("BiocParallel")
conda install -c bioconda bioconductor-biocparallel
q()
library("SummarizedExperiment")
q()
q()
library("SummarizedExperiment")
q()
library("SummarizedExperiment")
library("SummarizedExperiment")
sessionInfo
q()
devtools::intsall_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
devtools::install_local("/Users/cuizhe/Documents/GitHub/BuenColors-master")
install.packages("cowplot")
install.packages("irlba")
install.packages("umap")
library(umap)
q()
source('/Volumes/LACIE_SHARE/project/2020-03-13-pipelineForMarkerSelection/bin/markerSelection.R', echo=TRUE)
source('/Volumes/LACIE_SHARE/project/2020-03-13-pipelineForMarkerSelection/bin/markerSelection.R', echo=TRUE)
source('/Volumes/LACIE_SHARE/project/2020-03-13-pipelineForMarkerSelection/bin/markerSelection.R', echo=TRUE)
ratioMatrix<-matrix(nrow=nrow(fullData),ncol=length(label_list))
source('/Volumes/LACIE_SHARE/project/2020-03-13-pipelineForMarkerSelection/bin/markerSelection.R', echo=TRUE)
nrow(fullData)
View(ratioMatrix)
ratioMatrix<-matrix(nrow=nrow(fullData),ncol=1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
class(data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
nu
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(devtools)
install_github("r3fang/SnapATAC")
install_github("r3fang/SnapATAC")
install_local("/Users/cuizhe/Documents/GitHub/SnapATAC")
install.packages("plot3D")
install_local("/Users/cuizhe/Documents/GitHub/SnapATAC")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cellData1@bmat
cellData1@metaData$cell_id
idy<-readRDS(file = paste("/Volumes/LACIE_SHARE/data/2020-04-12-snapATAC_5K_mouse_adult_brain/idy.rds",sep = ""))
source('~/.active-rstudio-document', echo=TRUE)
View(cellData)
source('~/.active-rstudio-document', echo=TRUE)
View(cellData)
source('~/.active-rstudio-document', echo=TRUE)
View(cellData)
source('~/.active-rstudio-document', echo=TRUE)
View(cellData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(cellData)
View(cellData)
View(cellData)
colnames(cellData)
R
devtools::install_github("cole-trapnell-lab/garnett")
q()
devtools::install_github("cole-trapnell-lab/garnett")
q()
BiocManager::install(c("Gviz", "GenomicRanges", "rtracklayer"))
devtools::install_github("cole-trapnell-lab/cicero-release", ref = "monocle3")
devtools::install_github("cole-trapnell-lab/cicero-release", ref = "monocle3")
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/monocle3')
q()
q()
devtools::install_github('cole-trapnell-lab/leidenbase')
q()
devtools::install_github('cole-trapnell-lab/leidenbase')
q()
devtools::install_github('cole-trapnell-lab/leidenbase')
q()
devtools::install_github('IRkernel/IRdisplay')
devtools::install_github('IRkernel/IRkernel')
q()
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
q()
BiocManager::install("monocle")
devtools::install_github("caleblareau/BuenColors")
q()
q()
data<-readRDS("/Users/cuizhe/Downloads/10xpbmc5k-snap-full_enh0.1_int0.25.rds")
data2<-readRDS("/Users/cuizhe/Downloads/10xpbmc5k-snap-full.rds")
install.packages('Seurat')
install.packages(c("patchwork", "Seurat"))
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
(VariableFeatures(pbmc), 10)
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2
top10 <- head(VariableFeatures(pbmc), 10)
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- RunPCA(pbmc, features = VariableFeatures(object = pbmc))
print(pbmc[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(pbmc, dims = 1:2, reduction = "pca")
DimPlot(pbmc, reduction = "pca")
print(pbmc[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(pbmc, dims = 1:2, reduction = "pca")
DimPlot(pbmc, reduction = "pca")
DimHeatmap(pbmc, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(pbmc, dims = 1:15, cells = 500, balanced = TRUE)
pbmc <- JackStraw(pbmc, num.replicate = 100)
pbmc <- ScoreJackStraw(pbmc, dims = 1:20)
JackStrawPlot(pbmc, dims = 1:15)
ElbowPlot(pbmc)
pbmc <- FindNeighbors(pbmc, dims = 1:10)
pbmc <- FindClusters(pbmc, resolution = 0.5)
head(Idents(pbmc), 5)
pbmc <- RunUMAP(pbmc, dims = 1:10)
DimPlot(pbmc, reduction = "umap")
DimPlot(pbmc, reduction = "umap")
DimPlot(pbmc, reduction = "umap")
DimPlot(pbmc, reduction = "umap")
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
# run seurat for annotation on 10x pbmc scRNA-seq
library(dplyr)
library(Seurat)
library(patchwork)
setwd("/Users/cuizhe/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin")
pbmc.data <- Read10X(data.dir = "../data/filtered_feature_bc_matrix/")
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc5k", min.cells = 3, min.features = 200)
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- pbmc <- NormalizeData(pbmc)
# run seurat for annotation on 10x pbmc scRNA-seq
library(dplyr)
library(Seurat)
library(patchwork)
setwd("/Users/cuizhe/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin")
pbmc.data <- Read10X(data.dir = "../data/filtered_feature_bc_matrix/")
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc5k", min.cells = 3, min.features = 200)
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- NormalizeData(pbmc)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(pbmc), 10)
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- RunPCA(pbmc, features = VariableFeatures(object = pbmc))
print(pbmc[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(pbmc, dims = 1:2, reduction = "pca")
DimPlot(pbmc, reduction = "pca")
# run seurat for annotation on 10x pbmc scRNA-seq
library(dplyr)
library(Seurat)
library(patchwork)
setwd("/Users/cuizhe/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin")
pbmc.data <- Read10X(data.dir = "../data/filtered_feature_bc_matrix/")
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc5k", min.cells = 3, min.features = 200)
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- NormalizeData(pbmc)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(pbmc), 10)
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2
# run seurat for annotation on 10x pbmc scRNA-seq
library(dplyr)
library(Seurat)
library(patchwork)
setwd("/Users/cuizhe/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin")
pbmc.data <- Read10X(data.dir = "../data/filtered_feature_bc_matrix/")
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc5k", min.cells = 3, min.features = 200)
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- NormalizeData(pbmc)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(pbmc), 10)
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc[["RNA"]]@scale.data
View(pbmc)
# run seurat for annotation on 10x pbmc scRNA-seq
library(dplyr)
library(Seurat)
library(patchwork)
setwd("/Users/cuizhe/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin")
pbmc.data <- Read10X(data.dir = "../data/filtered_feature_bc_matrix/")
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc5k", min.cells = 3, min.features = 200)
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
pbmc <- NormalizeData(pbmc)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(pbmc), 10)
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2
all.genes <- rownames(pbmc)
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- RunPCA(pbmc, features = VariableFeatures(object = pbmc))
print(pbmc[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(pbmc, dims = 1:2, reduction = "pca")
DimPlot(pbmc, reduction = "pca")
DimHeatmap(pbmc, dims = 1, cells = 500, balanced = TRUE)
DimHeatmap(pbmc, dims = 1:15, cells = 500, balanced = TRUE)
pbmc <- JackStraw(pbmc, num.replicate = 100)
pbmc <- ScoreJackStraw(pbmc, dims = 1:20)
JackStrawPlot(pbmc, dims = 1:15)
ElbowPlot(pbmc)
pbmc <- FindNeighbors(pbmc, dims = 1:8)
pbmc <- FindClusters(pbmc, resolution = 0.3)
head(Idents(pbmc), 5)
pbmc <- RunUMAP(pbmc, dims = 1:10)
DimPlot(pbmc, reduction = "umap")
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
install.packages("hdf5r")
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
source('~/project_local/2020-06-21-seurat-rna-seq-10x-5k-v3/bin/run_seurat.r', echo=TRUE)
library(Seurat)
# load 10x v3 pbmc data
counts <- Read10X_h5("../tmp10k_v3/pbmc_10k_v3_filtered_feature_bc_matrix.h5")
rownames(counts) <- make.unique(rownames(counts))
rna <- CreateSeuratObject(counts = counts, assay = 'RNA', min.cells = 5, min.features = 500, project = '10x_RNA')
scrublet <- read.table("../tmp10k_v3/matrix_doublets.tsv", sep = "\t", col.names = c('observed', 'simulated'))
rownames(scrublet) <- colnames(counts)
rna <- AddMetaData(rna, metadata = scrublet)
rna <- RenameCells(rna, add.cell.id = 'rna')
mito.features <- grep(pattern = "^MT-", x = rownames(x = rna), value = TRUE)
percent.mito <- Matrix::colSums(x = GetAssayData(object = rna, slot = 'counts')[mito.features, ]) / Matrix::colSums(x = GetAssayData(object = rna, slot = 'counts'))
rna$percent.mito <- percent.mito
# QC
rna <- subset(x = rna, subset = nCount_RNA > 2000 & nCount_RNA < 20000 & percent.mito < 0.2 & observed < 0.1)
# preprocessing
rna <- NormalizeData(rna)
rna <- FindVariableFeatures(rna, nfeatures = 3000)
rna <- ScaleData(rna)
rna <- RunPCA(rna, npcs = 100)
rna <- RunTSNE(rna, dims = 1:30)
rna <- FindNeighbors(rna, dims = 1:30)
rna <- FindClusters(rna, resolution = 0.4, algorithm = 3)
rna <- RunUMAP(rna, graph = 'RNA_nn', metric = 'euclidean')
View(rna)
reticulate::py_install(packages ='umap-learn')
q()
